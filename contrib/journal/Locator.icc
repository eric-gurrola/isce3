// -*- C++ -*-
//
// michael a.g. aïvázis
// orthologue
// (c) 1998-2018 all rights reserved
//

#if !defined(pyre_journal_Locator_icc)
#error This header file contains implementation details of class Locator
#else

// injection operators for locators
template <typename Channel>
pyre::journal::Diagnostic<Channel> &
operator<< (
            pyre::journal::Diagnostic<Channel> & channel,
            const pyre::journal::Locator & locator) {
    return locator.inject(channel);
}


// and on null diagnostics
pyre::journal::Null &
operator<< (pyre::journal::Null & null, const pyre::journal::Locator &) {
    return null;
}


// interface
template <typename Channel>
pyre::journal::Diagnostic<Channel> &
pyre::journal::Locator::
inject(pyre::journal::Diagnostic<Channel> & channel) const
{
    // convert the line number into a string
    std::stringstream tmp;
    tmp << _line;
    // decorate
    channel.setattr("filename", _file);
    channel.setattr("line", tmp.str());
    channel.setattr("function", _function);
    // and return the channel
    return channel;
}


// meta methods
// destuctor
pyre::journal::Locator::
~Locator()
{}


// constructor
pyre::journal::Locator::
Locator(const char * file, int line, const char * function) :
    _file(file ? file : ""),
    _line(line >= 0 ? line : 0),
    _function(function ? function : "")
{}


// copy constructor
pyre::journal::Locator::
Locator(const Locator & other):
    _file(other._file), _line(other._line), _function(other._function)
{
}


# endif

// end of file
